version: '2'

volumes:
  orderer.nomad.com:
  peer0.dtag.nomad.com:
  peer0.tmus.nomad.com:
  peer0.gsma.nomad.com:

networks:
  nomad:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

services:

  # ===================================================================
  #
  # NGINX
  #
  # ===================================================================

#  nginx-nomad:
#    container_name: nginx-nomad
#    image: nginx:1.17.5
#    restart: always
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/dtag:/etc/nginx/certs/dtag
#      - ./nginx/tmus:/etc/nginx/certs/tmus
#    ports:
#      - 80:80
#      - 443:443
#    networks:
#      - nomad

  # ===================================================================
  #
  # ORDERER
  #
  # ===================================================================

  orderer.nomad.com:
    container_name: orderer.nomad.com
    image: hyperledger/fabric-orderer:${HLF_VERSION}
    restart: always
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    volumes:
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/nomad.com/orderers/orderer.nomad.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/nomad.com/orderers/orderer.nomad.com/tls:/var/hyperledger/orderer/tls
      - orderer.nomad.com:/var/hyperledger/production/orderer
    command: orderer
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    ports:
      - 7050:7050
    networks:
      - nomad

  # ===================================================================
  #
  # DTAG
  #
  # =================================================================== 

  blockchain-adapter-dtag:
    build: ./blockchain-adapter/server
    container_name: blockchain-adapter-dtag
    image: blockchain-adapter
    restart: always
    environment:
      - BSA_PORT=${DTAG_BLOCKCHAIN_ADAPTER_PORT}
      - BSA_CCP=../config/ccp/DTAG.json
    ports:
      - ${DTAG_BLOCKCHAIN_ADAPTER_PORT}:${DTAG_BLOCKCHAIN_ADAPTER_PORT}
    depends_on:
      - peer0.dtag.nomad.com
    networks:
      - nomad

  offchain-db-adapter-dtag:
    build: ./offchain_db_adapter
    container_name: offchain-db-adapter-dtag
    image: offchain-db-adapter
    restart: always
    environment:
      - ODBA_MYSQL_SERVER_HOST=offchain-db-dtag
      - ODBA_MYSQL_SERVER_PORT=3306
      - ODBA_MYSQL_USER=${DTAG_OFFCHAIN_MYSQL_USER}
      - ODBA_MYSQL_PASSWORD=${DTAG_OFFCHAIN_MYSQL_PASSWORD}
      - ODBA_MYSQL_DATABASE=${DTAG_OFFCHAIN_MYSQL_DB}
      - ODBA_REST_PORT=${DTAG_OFFCHAIN_REST_PORT}      
    ports:
      - ${DTAG_OFFCHAIN_REST_PORT}:${DTAG_OFFCHAIN_REST_PORT}
    depends_on:
      - offchain-db-dtag
    networks:
      - nomad

  offchain-db-dtag:
    container_name: offchain-db-dtag
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DTAG_OFFCHAIN_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DTAG_OFFCHAIN_MYSQL_DB}
      MYSQL_USER: ${DTAG_OFFCHAIN_MYSQL_USER}
      MYSQL_PASSWORD: ${DTAG_OFFCHAIN_MYSQL_PASSWORD}
    ports:
      - 3326:3306
    networks:
      - nomad

  ca-dtag:
    container_name: ca-dtag
    image: hyperledger/fabric-ca:${HLF_CA_VERSION}
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.nomad.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.dtag.nomad.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/8e0dcd5d6e1cd6d420784957ba6c854896511a968ffcd6b7b94d4fe10b5821ff_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:${DTAG_CA_ADMIN_ENROLLMENT_SECRET}'
    volumes:
      - ./crypto-config/peerOrganizations/dtag.nomad.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - nomad

  peer0.dtag.nomad.com:
    container_name: peer0.dtag.nomad.com
    image: hyperledger/fabric-peer:${HLF_VERSION}
    restart: always
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_nomad
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=peer0.dtag.nomad.com
      - CORE_PEER_ADDRESS=peer0.dtag.nomad.com:${DTAG_PEER_PORT}
      - CORE_PEER_LISTENADDRESS=peer0.dtag.nomad.com:${DTAG_PEER_PORT}
      - CORE_PEER_CHAINCODEADDRESS=peer0.dtag.nomad.com:${DTAG_PEER_CHAINCODE_PORT}
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.dtag.nomad.com:${DTAG_PEER_CHAINCODE_PORT}
      - CORE_PEER_LOCALMSPID=DTAG
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.dtag.nomad.com:${DTAG_PEER_PORT}
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.dtag.nomad.com:${DTAG_PEER_PORT}
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb-peer0-dtag:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DTAG_COUCHDB_USER}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DTAG_COUCHDB_PASSWORD}
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/fabric/users/Admin@dtag.nomad.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/fabric/users/Admin@dtag.nomad.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/fabric/users/Admin@dtag.nomad.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/dtag.nomad.com/peers/peer0.dtag.nomad.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/dtag.nomad.com/peers/peer0.dtag.nomad.com/tls:/etc/hyperledger/fabric/tls
      - ./crypto-config/peerOrganizations/dtag.nomad.com/users:/etc/hyperledger/fabric/users
      - peer0.dtag.nomad.com:/var/hyperledger/production
    ports:
      - ${DTAG_PEER_PORT}:${DTAG_PEER_PORT}
    depends_on:
      - couchdb-peer0-dtag
    networks:
      - nomad

  couchdb-peer0-dtag:
    container_name: couchdb-peer0-dtag
    image: hyperledger/fabric-couchdb:${COUCHDB_VERSION}
    restart: always
    environment:
      - COUCHDB_USER=${DTAG_COUCHDB_USER}
      - COUCHDB_PASSWORD=${DTAG_COUCHDB_PASSWORD}
    ports:
      - 5984:5984
    networks:
      - nomad

  cli-dtag:
    container_name: cli-dtag
    image: hyperledger/fabric-tools:${HLF_VERSION}
    restart: always
    tty: true
    stdin_open: true
    environment:
      - ORG=dtag
      - PORT=${DTAG_PEER_PORT}
      - PEER=peer0
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli-dtag
      - CORE_PEER_ADDRESS=peer0.dtag.nomad.com:${DTAG_PEER_PORT}
      - CORE_PEER_LOCALMSPID=DTAG
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dtag.nomad.com/users/Admin@dtag.nomad.com/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dtag.nomad.com/peers/peer0.dtag.nomad.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dtag.nomad.com/peers/peer0.dtag.nomad.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dtag.nomad.com/peers/peer0.dtag.nomad.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - CORE_PEER_TLS_CLIENTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dtag.nomad.com/users/Admin@dtag.nomad.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/dtag.nomad.com/users/Admin@dtag.nomad.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode:/opt/gopath/src/github.com/chaincode
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./organizations/utils.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli/utils.sh
      - ./organizations/dtag/cli:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli
    depends_on:
      - peer0.dtag.nomad.com
    networks:
      - nomad

  # ===================================================================
  #
  # TMUS
  #
  # ===================================================================
  blockchain-adapter-tmus:
    build: ./blockchain-adapter/server
    container_name: blockchain-adapter-tmus
    image: blockchain-adapter
    restart: always
    environment:
      - BSA_PORT=${TMUS_BLOCKCHAIN_ADAPTER_PORT}
      - BSA_CCP=../config/ccp/TMUS.json
    ports:
      - ${TMUS_BLOCKCHAIN_ADAPTER_PORT}:${TMUS_BLOCKCHAIN_ADAPTER_PORT}
    depends_on:
      - peer0.tmus.nomad.com
    networks:
      - nomad

  offchain-db-adapter-tmus:
    build: ./offchain_db_adapter
    container_name: offchain-db-adapter-tmus
    image: offchain-db-adapter
    restart: always
    environment:
      - ODBA_MYSQL_SERVER_HOST=offchain-db-tmus
      - ODBA_MYSQL_SERVER_PORT=3306
      - ODBA_MYSQL_USER=${TMUS_OFFCHAIN_MYSQL_USER}
      - ODBA_MYSQL_PASSWORD=${TMUS_OFFCHAIN_MYSQL_PASSWORD}
      - ODBA_MYSQL_DATABASE=${TMUS_OFFCHAIN_MYSQL_DB}
      - ODBA_REST_PORT=${TMUS_OFFCHAIN_REST_PORT}      
    ports:
      - ${TMUS_OFFCHAIN_REST_PORT}:${TMUS_OFFCHAIN_REST_PORT}
    depends_on:
      - offchain-db-tmus 
    networks:
      - nomad

  offchain-db-tmus:
    container_name: offchain-db-tmus
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${TMUS_OFFCHAIN_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${TMUS_OFFCHAIN_MYSQL_DB}
      MYSQL_USER: ${TMUS_OFFCHAIN_MYSQL_USER}
      MYSQL_PASSWORD: ${TMUS_OFFCHAIN_MYSQL_PASSWORD}
    ports:
      - 3316:3306
    networks:
      - nomad

  ca-tmus:
    container_name: ca-tmus
    image: hyperledger/fabric-ca:${HLF_CA_VERSION}
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.nomad.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.tmus.nomad.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/758e508aebafc3c3af3abc21c20e42c19b67190ff087abbaa62ba3f5f5d8c7a2_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:${TMUS_CA_ADMIN_ENROLLMENT_SECRET}'
    volumes:
      - ./crypto-config/peerOrganizations/tmus.nomad.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - nomad

  peer0.tmus.nomad.com:
    container_name: peer0.tmus.nomad.com
    image: hyperledger/fabric-peer:${HLF_VERSION}
    restart: always
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_nomad
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=peer0.tmus.nomad.com
      - CORE_PEER_ADDRESS=peer0.tmus.nomad.com:${TMUS_PEER_PORT}
      - CORE_PEER_LISTENADDRESS=peer0.tmus.nomad.com:${TMUS_PEER_PORT}
      - CORE_PEER_CHAINCODEADDRESS=peer0.tmus.nomad.com:${TMUS_PEER_CHAINCODE_PORT}
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.tmus.nomad.com:${TMUS_PEER_CHAINCODE_PORT}
      - CORE_PEER_LOCALMSPID=TMUS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.tmus.nomad.com:${TMUS_PEER_PORT}
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.tmus.nomad.com:${TMUS_PEER_PORT}
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb-peer0-tmus:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${TMUS_COUCHDB_USER}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${TMUS_COUCHDB_PASSWORD}
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/fabric/users/Admin@tmus.nomad.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/fabric/users/Admin@tmus.nomad.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/fabric/users/Admin@tmus.nomad.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/tmus.nomad.com/peers/peer0.tmus.nomad.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/tmus.nomad.com/peers/peer0.tmus.nomad.com/tls:/etc/hyperledger/fabric/tls
      - ./crypto-config/peerOrganizations/tmus.nomad.com/users:/etc/hyperledger/fabric/users
      - peer0.tmus.nomad.com:/var/hyperledger/production
    ports:
      - ${TMUS_PEER_PORT}:${TMUS_PEER_PORT}
    depends_on:
      - couchdb-peer0-tmus
    networks:
      - nomad

  couchdb-peer0-tmus:
    container_name: couchdb-peer0-tmus
    image: hyperledger/fabric-couchdb:${COUCHDB_VERSION}
    restart: always
    environment:
      - COUCHDB_USER=${TMUS_COUCHDB_USER}
      - COUCHDB_PASSWORD=${TMUS_COUCHDB_PASSWORD}
    ports:
      - 7984:5984
    networks:
      - nomad

  cli-tmus:
    container_name: cli-tmus
    image: hyperledger/fabric-tools:${HLF_VERSION}
    restart: always
    tty: true
    stdin_open: true
    environment:
      - ORG=tmus
      - PORT=${TMUS_PEER_PORT}
      - PEER=peer0
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli-tmus
      - CORE_PEER_ADDRESS=peer0.tmus.nomad.com:${TMUS_PEER_PORT}
      - CORE_PEER_LOCALMSPID=TMUS
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/tmus.nomad.com/users/Admin@tmus.nomad.com/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/tmus.nomad.com/peers/peer0.tmus.nomad.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/tmus.nomad.com/peers/peer0.tmus.nomad.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/tmus.nomad.com/peers/peer0.tmus.nomad.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - CORE_PEER_TLS_CLIENTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/tmus.nomad.com/users/Admin@tmus.nomad.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/tmus.nomad.com/users/Admin@tmus.nomad.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode:/opt/gopath/src/github.com/chaincode
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./organizations/utils.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli/utils.sh
      - ./organizations/tmus/cli:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli
    depends_on:
      - peer0.tmus.nomad.com
    networks:
      - nomad

  # ===================================================================
  #
  # GSMA
  #
  # ===================================================================

  peer0.gsma.nomad.com:
    container_name: peer0.gsma.nomad.com
    image: hyperledger/fabric-peer:${HLF_VERSION}
    restart: always
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_nomad
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=peer0.gsma.nomad.com
      - CORE_PEER_ADDRESS=peer0.gsma.nomad.com:${GSMA_PEER_PORT}
      - CORE_PEER_LISTENADDRESS=peer0.gsma.nomad.com:${GSMA_PEER_PORT}
      - CORE_PEER_CHAINCODEADDRESS=peer0.gsma.nomad.com:${GSMA_PEER_CHAINCODE_PORT}
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.gsma.nomad.com:${GSMA_PEER_CHAINCODE_PORT}
      - CORE_PEER_LOCALMSPID=GSMA
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.gsma.nomad.com:${GSMA_PEER_PORT}
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.gsma.nomad.com:${GSMA_PEER_PORT}
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb-peer0-gsma:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${GSMA_COUCHDB_USER}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${GSMA_COUCHDB_PASSWORD}
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/etc/hyperledger/fabric/users/Admin@gsma.nomad.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTCERT_FILE=/etc/hyperledger/fabric/users/Admin@gsma.nomad.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/etc/hyperledger/fabric/users/Admin@gsma.nomad.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/gsma.nomad.com/peers/peer0.gsma.nomad.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/gsma.nomad.com/peers/peer0.gsma.nomad.com/tls:/etc/hyperledger/fabric/tls
      - ./crypto-config/peerOrganizations/gsma.nomad.com/users:/etc/hyperledger/fabric/users
      - peer0.gsma.nomad.com:/var/hyperledger/production
    ports:
      - ${GSMA_PEER_PORT}:${GSMA_PEER_PORT}
    depends_on:
      - couchdb-peer0-gsma
    networks:
      - nomad

  couchdb-peer0-gsma:
    container_name: couchdb-peer0-gsma
    image: hyperledger/fabric-couchdb:${COUCHDB_VERSION}
    restart: always
    environment:
      - COUCHDB_USER=${GSMA_COUCHDB_USER}
      - COUCHDB_PASSWORD=${GSMA_COUCHDB_PASSWORD}
    ports:
      - 8984:5984
    networks:
      - nomad

  cli-gsma:
    container_name: cli-gsma
    image: hyperledger/fabric-tools:${HLF_VERSION}
    restart: always
    tty: true
    stdin_open: true
    environment:
      - ORG=gsma
      - PORT=${GSMA_PEER_PORT}
      - PEER=peer0
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli-gsma
      - CORE_PEER_ADDRESS=peer0.gsma.nomad.com:${GSMA_PEER_PORT}
      - CORE_PEER_LOCALMSPID=GSMA
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/gsma.nomad.com/users/Admin@gsma.nomad.com/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/gsma.nomad.com/peers/peer0.gsma.nomad.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/gsma.nomad.com/peers/peer0.gsma.nomad.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/gsma.nomad.com/peers/peer0.gsma.nomad.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CLIENTAUTHREQUIRED}
      - CORE_PEER_TLS_CLIENTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/gsma.nomad.com/users/Admin@gsma.nomad.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/gsma.nomad.com/users/Admin@gsma.nomad.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode:/opt/gopath/src/github.com/chaincode
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./organizations/utils.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli/utils.sh
      - ./organizations/gsma/cli:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli
    depends_on:
      - peer0.gsma.nomad.com
    networks:
      - nomad
